package itesm.mx.acbasic;/* Generated By:JavaCC: Do not edit this line. ACBasicConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ACBasicConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int PROGRAM = 5;
  /** RegularExpression Id. */
  int VAR = 6;
  /** RegularExpression Id. */
  int FUNC = 7;
  /** RegularExpression Id. */
  int MAIN = 8;
  /** RegularExpression Id. */
  int VOID = 9;
  /** RegularExpression Id. */
  int INT = 10;
  /** RegularExpression Id. */
  int CHAR = 11;
  /** RegularExpression Id. */
  int FLOAT = 12;
  /** RegularExpression Id. */
  int BOOL = 13;
  /** RegularExpression Id. */
  int STRING = 14;
  /** RegularExpression Id. */
  int ARRAY = 15;
  /** RegularExpression Id. */
  int PRINT = 16;
  /** RegularExpression Id. */
  int READ = 17;
  /** RegularExpression Id. */
  int WHILE = 18;
  /** RegularExpression Id. */
  int TRUE = 19;
  /** RegularExpression Id. */
  int FALSE = 20;
  /** RegularExpression Id. */
  int IF = 21;
  /** RegularExpression Id. */
  int ELIF = 22;
  /** RegularExpression Id. */
  int ELSE = 23;
  /** RegularExpression Id. */
  int AMP = 24;
  /** RegularExpression Id. */
  int RETURN = 25;
  /** RegularExpression Id. */
  int PYC = 26;
  /** RegularExpression Id. */
  int COMA = 27;
  /** RegularExpression Id. */
  int LLAIZQ = 28;
  /** RegularExpression Id. */
  int LLADER = 29;
  /** RegularExpression Id. */
  int CORIZQ = 30;
  /** RegularExpression Id. */
  int CORDER = 31;
  /** RegularExpression Id. */
  int IGUAL = 32;
  /** RegularExpression Id. */
  int PARIZQ = 33;
  /** RegularExpression Id. */
  int PARDER = 34;
  /** RegularExpression Id. */
  int MAYOR = 35;
  /** RegularExpression Id. */
  int MENOR = 36;
  /** RegularExpression Id. */
  int MENORIG = 37;
  /** RegularExpression Id. */
  int MAYORIG = 38;
  /** RegularExpression Id. */
  int IGUALIG = 39;
  /** RegularExpression Id. */
  int DIFERENTE = 40;
  /** RegularExpression Id. */
  int NEGACION = 41;
  /** RegularExpression Id. */
  int AND = 42;
  /** RegularExpression Id. */
  int OR = 43;
  /** RegularExpression Id. */
  int MAS = 44;
  /** RegularExpression Id. */
  int MENOS = 45;
  /** RegularExpression Id. */
  int POR = 46;
  /** RegularExpression Id. */
  int ENTRE = 47;
  /** RegularExpression Id. */
  int ID = 48;
  /** RegularExpression Id. */
  int CTEI = 49;
  /** RegularExpression Id. */
  int CTEF = 50;
  /** RegularExpression Id. */
  int CTESTR = 51;
  /** RegularExpression Id. */
  int CTECHAR = 52;
  /** RegularExpression Id. */
  int DIGIT = 53;
  /** RegularExpression Id. */
  int LETTER = 54;
  /** RegularExpression Id. */
  int CARACTER = 55;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "\"program\"",
    "\"var\"",
    "\"func\"",
    "\"main\"",
    "\"void\"",
    "\"int\"",
    "\"char\"",
    "\"float\"",
    "\"bool\"",
    "\"string\"",
    "\"array\"",
    "\"print\"",
    "\"read\"",
    "\"while\"",
    "\"true\"",
    "\"false\"",
    "\"if\"",
    "\"elif\"",
    "\"else\"",
    "\"&\"",
    "\"return\"",
    "\";\"",
    "\",\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\"=\"",
    "\"(\"",
    "\")\"",
    "\">\"",
    "\"<\"",
    "\"<=\"",
    "\">=\"",
    "\"==\"",
    "\"!=\"",
    "\"!\"",
    "\"&&\"",
    "\"||\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "<ID>",
    "<CTEI>",
    "<CTEF>",
    "<CTESTR>",
    "<CTECHAR>",
    "<DIGIT>",
    "<LETTER>",
    "<CARACTER>",
  };

}
